version: "3.7"
services:
  frontend:
    image: node:12-alpine
    ports:
     - "8081:80"
    volumes:
     - ./frontend:/var/service
     - ./tsconfig.json:/var/tsconfig.json
    working_dir: /var/service
    command: npm run dev
    depends_on:
      - bff
      - api
  bff:
    image: node:12-alpine
    ports:
     - "8080:80"
    volumes:
     - ./backend-for-frontend:/var/service
     - ./tsconfig.json:/var/tsconfig.json
    working_dir: /var/service
    command: npm run dev
  api:
    image: node:12-alpine
    ports:
      - "8082:80"
    volumes:
      - ./api:/var/service
      - ./tsconfig.json:/var/tsconfig.json
      - ./wait-for.sh:/root/wait-for.sh
    depends_on:
      - db
    working_dir: /var/service
    command: sh -c '/root/wait-for.sh db:5432 -- npm run dev'
  db:
    image: postgres:12-alpine
    environment:
      POSTGRES_DB: cards
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 30s
      retries: 3
    volumes:
      - ./db-data:/var/lib/postgresql/data
volumes:
  db-data:
